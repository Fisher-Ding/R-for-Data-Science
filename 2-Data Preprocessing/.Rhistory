# 数据清洗
## 1. 处理缺失值
missing_summary <- colSums(is.na(BostonHousing))
if(any(missing_summary > 0)) {
# 可视化缺失值
plot_missing(BostonHousing)
aggr(BostonHousing, numbers = TRUE, sortVars = TRUE, labels = names(BostonHousing), ylab = c("Missing Data", "Pattern"))
# 处理缺失值 - 使用均值填充
BostonHousing <- BostonHousing %>%
mutate(across(where(is.numeric), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .)))
# 若仍有缺失值，则使用多重插补
if(any(colSums(is.na(BostonHousing)) > 0)) {
data_imputed <- mice(BostonHousing, m = 5, maxit = 50, method = 'pmm', seed = 500)
BostonHousing <- complete(data_imputed, 1)
}
}
## 2. 处理重复值
duplicated_count <- sum(duplicated(BostonHousing))
BostonHousing <- unique(BostonHousing)
## 3. 处理异常值
Q1 <- apply(BostonHousing, 2, quantile, 0.25, na.rm = TRUE)
## 1. 处理缺失值
missing_summary <- colSums(is.na(BostonHousing))
if(any(missing_summary > 0)) {
# 可视化缺失值
plot_missing(BostonHousing)
aggr(BostonHousing, numbers = TRUE, sortVars = TRUE, labels = names(BostonHousing), ylab = c("Missing Data", "Pattern"))
# 处理缺失值 - 使用均值填充
BostonHousing <- BostonHousing %>%
mutate(across(where(is.numeric), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .)))
# 若仍有缺失值，则使用多重插补
if(any(colSums(is.na(BostonHousing)) > 0)) {
data_imputed <- mice(BostonHousing, m = 5, maxit = 50, method = 'pmm', seed = 500)
BostonHousing <- complete(data_imputed, 1)
}
}
missing_summary
# 可视化缺失值
plot_missing(BostonHousing)
aggr(BostonHousing, numbers = TRUE, sortVars = TRUE, labels = names(BostonHousing), ylab = c("Missing Data", "Pattern"))
# 处理缺失值 - 使用均值填充
BostonHousing <- BostonHousing %>%
mutate(across(where(is.numeric), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .)))
# 若仍有缺失值，则使用多重插补
if(any(colSums(is.na(BostonHousing)) > 0)) {
data_imputed <- mice(BostonHousing, m = 5, maxit = 50, method = 'pmm', seed = 500)
BostonHousing <- complete(data_imputed, 1)
}
# 若仍有缺失值，则使用多重插补
if(any(colSums(is.na(BostonHousing)) > 0)) {
data_imputed <- mice(BostonHousing, m = 5, maxit = 50, method = 'pmm', seed = 500)
BostonHousing <- complete(data_imputed, 1)
}
# 加载包
rm(list=ls())
library(tidyverse)
library(Hmisc)
library(psych)
library(skimr)
library(VIM)
library(DataExplorer)
library(mice)
pacman::p_load(
tidyverse,
VIM,
DataExplorer,
mice
)
pacman::p_load(
tidyverse,
VIM,
DataExplorer,
mice
)
pacman::p_load(
tidyverse,
VIM,           # Missing value visualization package, this section will use its aggr() function
DataExplorer,  # Data exploration and visualization
mice,          # Missing value handling package, this section will use it for multiple imputation
mlbench.       # 将会使用到包中的BostonHousing数据集
)
pacman::p_load(
tidyverse,
VIM,           # Missing value visualization package, this section will use its aggr() function
DataExplorer,  # Data exploration and visualization
mice,          # Missing value handling package, this section will use it for multiple imputation
mlbench       # 将会使用到包中的BostonHousing数据集
)
# 加载包
rm(list=ls())
pacman::p_load(
tidyverse,
VIM,           # Missing value visualization package, this section will use its aggr() function
DataExplorer,  # Data exploration and visualization
mice,          # Missing value handling package, this section will use it for multiple imputation
mlbench       # 将会使用到包中的BostonHousing数据集
)
# 数据导入
df <- BostonHousing
# 数据导入
data(BostonHousing)
df <- BostonHousing
# 加载包
rm(list=ls())
pacman::p_load(
tidyverse,
VIM,           # Missing value visualization package, this section will use its aggr() function
DataExplorer,  # Data exploration and visualization
mice,          # Missing value handling package, this section will use it for multiple imputation
mlbench       # 将会使用到包中的BostonHousing数据集
)
# 数据导入
df <- BostonHousing
# 数据导入
df <- BostonHousing
# 数据导入
data(BostonHousing)
df <- BostonHousing
# 加载包
rm(list=ls())
pacman::p_load(
tidyverse,
VIM,           # Missing value visualization package, this section will use its aggr() function
DataExplorer,  # Data exploration and visualization
mice,          # Missing value handling package, this section will use it for multiple imputation
mlbench       # 将会使用到包中的BostonHousing数据集
)
# 数据导入
df <- data(BostonHousing)
# 数据导入
data(BostonHousing)
df <- BostonHousing
# 加载包
rm(list=ls())
pacman::p_load(
tidyverse,
VIM,           # Missing value visualization package, this section will use its aggr() function
DataExplorer,  # Data exploration and visualization
mice,          # Missing value handling package, this section will use it for multiple imputation
mlbench       # 将会使用到包中的BostonHousing数据集
)
skimr::skim(d1)
# 描述统计
glimpse(d1)
# 数据导入
data(BostonHousing)
d1 <- BostonHousing
# 描述统计
glimpse(d1)
# view(d1)
Hmisc::describe(d1)
psych::describe(d1)
skimr::skim(d1)
d1
#
#
# # 使用逻辑与 (&)，筛选出既是从头到尾重复的，又是从尾到头重复的行（即中间的重复行，不包括首次和末次出现的重复行）。
# duplicate_rows <- d1 %>%
#   filter(duplicated(select(., MSZoning, LotArea)) & duplicated(select(., MSZoning, LotArea), fromLast = TRUE)) %>%
#   select(MSZoning, LotArea) %>%
#   arrange(LotArea,MSZoning) %>%
#   print()
# d1
# ⭐方法 3：使用 group_by 和 filter 筛选特定列所有重复行
d1 %>%
group_by(across(c("MSZoning","LotArea"))) %>%
filter(n()>1) %>%
ungroup() %>%
filter(MSZoning=="RM") %>%
arrange(LotArea,Id,MSZoning) %>%
select(Id,LotArea,MSZoning,everything())
#
#
# # 使用逻辑与 (&)，筛选出既是从头到尾重复的，又是从尾到头重复的行（即中间的重复行，不包括首次和末次出现的重复行）。
# duplicate_rows <- d1 %>%
#   filter(duplicated(select(., MSZoning, LotArea)) & duplicated(select(., MSZoning, LotArea), fromLast = TRUE)) %>%
#   select(MSZoning, LotArea) %>%
#   arrange(LotArea,MSZoning) %>%
#   print()
# d1
# ⭐方法 3：使用 group_by 和 filter 筛选特定列所有重复行
d1 %>%
group_by(across(c("MSZoning","LotArea"))) %>%
filter(n()>1) %>%
ungroup() %>%
filter(MSZoning=="RM") %>%
arrange(LotArea,Id,MSZoning) %>%
select(Id,LotArea,MSZoning,everything())
%>%
pacman::p_load(
tidyverse,
VIM,           # Missing value visualization package, this section will use its aggr() function
DataExplorer,  # Data exploration and visualization
mice,          # Missing value handling package, this section will use it for multiple imputation
mlbench       # 将会使用到包中的BostonHousing数据集
)
#
#
# # 使用逻辑与 (&)，筛选出既是从头到尾重复的，又是从尾到头重复的行（即中间的重复行，不包括首次和末次出现的重复行）。
# duplicate_rows <- d1 %>%
#   filter(duplicated(select(., MSZoning, LotArea)) & duplicated(select(., MSZoning, LotArea), fromLast = TRUE)) %>%
#   select(MSZoning, LotArea) %>%
#   arrange(LotArea,MSZoning) %>%
#   print()
# d1
# ⭐方法 3：使用 group_by 和 filter 筛选特定列所有重复行
d1 %>%
group_by(across(c("MSZoning","LotArea"))) %>%
filter(n()>1) %>%
ungroup() %>%
filter(MSZoning=="RM") %>%
arrange(LotArea,Id,MSZoning) %>%
select(Id,LotArea,MSZoning,everything())
# 描述统计
glimpse(d1)
# view(d1)
Hmisc::describe(d1)
psych::describe(d1)
skimr::skim(d1)
# load packages
install.packages("pacman")
# load packages
# install.packages("pacman")
pacman::p_load(
tidyverse,
VIM,           # Missing value visualization package, this section will use its aggr() function
DataExplorer,  # Data exploration and visualization
mice,          # Missing value handling package, this section will use it for multiple imputation
mlbench       # BostonHousing dataset
)
# import data
data(BostonHousing, package = "mlbench")
d1 %>%
group_by(across(.)) %>%
filter(n()>1) %>%
ungroup() %>%
filter(MSZoning=="RM") %>%
arrange(LotArea,Id,MSZoning) %>%
select(Id,LotArea,MSZoning,everything())
# clean environment
rm(list=ls())
# load packages
# install.packages("pacman")
pacman::p_load(
tidyverse,
VIM,           # Missing value visualization package, this section will use its aggr() function
DataExplorer,  # Data exploration and visualization
mice          # Missing value handling package, this section will use it for multiple imputation
)
# import data
data(BostonHousing, package = "mlbench") # BostonHousing dataset
d1 <- BostonHousing
d1 <- BostonHousing %>%
view()
# 描述统计
glimpse(d1)
str(d1)
# 描述统计
glimpse(d1)
# 检查数据是否存在缺失值
sum(is.na(BostonHousing))
# 按列统计缺失值情况
colSums(is.na(BostonHousing))
# 可视化缺失值分布
library(VIM)
aggr(BostonHousing, col = c("navyblue", "red"), numbers = TRUE, sortVars = TRUE,
labels = names(BostonHousing), cex.axis = 0.7, gap = 3)
# import data
# install.packages("nycflights13")
data(flights, package = "nycflights13") # BostonHousing dataset
# import data
# install.packages("nycflights13")
data(flights, package = "nycflights13") # BostonHousing dataset
d1 <- flights
# clean environment
rm(list=ls())
# load packages
# install.packages("pacman")
pacman::p_load(
tidyverse,
VIM,           # Missing value visualization package, this section will use its aggr() function
DataExplorer,  # Data exploration and visualization
mice          # Missing value handling package, this section will use it for multiple imputation
)
# import data
# install.packages("nycflights13")
data(flights, package = "nycflights13") # BostonHousing dataset
d1 <- flights
View(d1)
# 描述统计
glimpse(d1)
Hmisc::describe(d1)
psych::describe(d1)
skimr::skim(d1)
# 步骤一：描述统计缺失值
sum(is.na(d1)) # 统计总的缺失值数量
d1
d1
d1 %>%
filter(across(is.na(.)))
View(d1)
# 缺失值概况
sapply(flights, function(x) sum(is.na(x)))
# 将日期格式标准化
flights$date <- as.Date(paste(flights$year, flights$month, flights$day, sep = "-"))
# 将日期格式标准化
flights$date <- as.Date(paste(flights$year, flights$month, flights$day, sep = "-"))
flights %>%
summarise(across(everything(), ~ sum(is.na(.))))
d1 %>%
summarise(across(everything(), ~ sum(is.na(.))))
# clean environment
rm(list=ls())
# load packages
# install.packages("pacman")
pacman::p_load(
tidyverse,
VIM,           # Missing value visualization package, this section will use its aggr() function
DataExplorer,  # Data exploration and visualization
mice          # Missing value handling package, this section will use it for multiple imputation
)
d1 %>%
summarise(
across(everything(),~sum(is.na(.)))
)
# import data
# install.packages("nycflights13")
data(flights, package = "nycflights13") # BostonHousing dataset
d1 <- flights
# 描述统计
glimpse(d1)
Hmisc::describe(d1)
psych::describe(d1)
skimr::skim(d1)
d1 %>%
summarise(
across(everything(),~sum(is.na(.)))
)
d1 %>%
summarise(
across(everything(),~sum(is.na(.)))
)
# 步骤一：描述统计缺失值
sapply(flights, function(x)sum(is.na(x)))
flights %>%
summarise(across(everything(), ~ mean(is.na(.)))) %>%
pivot_longer(everything(), names_to = "variable", values_to = "missing_rate") %>%
arrange(desc(missing_rate))
flights %>%
mutate(missing_count = rowSums(is.na(.))) %>%
arrange(desc(missing_count)) %>%
head()
# 按行统计缺失值
flights %>%
mutate(missing_count = rowSums(is.na(.))) %>%
arrange(desc(missing_count))
# 步骤二：可视化缺失值
# 1.使用VIM包中的aggr函数
aggr(d1,
# col = c('navyblue','red'),
# prop=TRUE,
numbers = TRUE,
sortVars = TRUE,
labels = names(d1),
# cex.axis = .7,
# gap = 3,
ylab = c("Missing data","Pattern")
)
# 按行统计缺失值
flights %>%
mutate(missing_count = rowSums(is.na(.))) %>%
filter(missing_count>1)
# 按行统计缺失值
flights %>%
mutate(missing_count = rowSums(is.na(.))) %>%
filter(missing_count>1) %>%
arrange(desc(missing_count))
# 步骤二：可视化缺失值
# 1.使用VIM包中的aggr函数
aggr(d1,
# col = c('navyblue','red'),
# prop=TRUE,
numbers = TRUE,
sortVars = TRUE,
labels = names(d1),
# cex.axis = .7,
# gap = 3,
ylab = c("Missing data","Pattern")
)
# 计算缺失值比例
d1 %>%
summarise(across(everything(), ~ mean(is.na(.)))) %>%
pivot_longer(everything(), names_to = "variable", values_to = "missing_rate") %>%
arrange(desc(missing_rate))
# 步骤二：可视化缺失值
# 1.使用VIM包中的aggr函数
aggr(d1,
# col = c('navyblue','red'),
# prop=TRUE,
numbers = TRUE,
sortVars = TRUE,
labels = names(d1),
# cex.axis = .7,
# gap = 3,
ylab = c("Missing data","Pattern")
)
# 2.使用visdat包中的vis_miss函数
pacman::p_load(visdat)
# 可视化缺失值模式
vis_miss(flights)
# 可视化缺失值模式
vis_miss(d1)
library(visdat)
# 可视化缺失值模式
vis_miss(d1)
# 可视化缺失值模式
vis_miss(d1)
library(UpSetR)
# 观察哪些变量同时缺失
upset(is.na(flights), sets = names(flights))
# 观察哪些变量同时缺失
upset(is.na(flights), sets = names(flights))
# 可视化缺失值模式
vis_miss(d1)
# 2.使用visdat包中的vis_miss函数
pacman::p_load(visdat)
# 可视化缺失值模式
visdat::vis_miss(d1)
matrixplot(d1)
matrixplot(d1)
# clean environment
rm(list=ls())
# load packages
# install.packages("pacman")
pacman::p_load(
tidyverse,
VIM,           # Missing value visualization package, this section will use its aggr() function
DataExplorer,  # Data exploration and visualization
mice          # Missing value handling package, this section will use it for multiple imputation
)
# import data
# install.packages("nycflights13")
data(flights, package = "nycflights13") # BostonHousing dataset
d1 <- flights
# 描述统计
glimpse(d1)
Hmisc::describe(d1)
psych::describe(d1)
skimr::skim(d1)
# 步骤一：描述统计缺失值
# 1.sapply()
sapply(flights, function(x) sum(is.na(x)))
# 2.tidyverse
d1 %>%
summarise(
across(everything(),~sum(is.na(.)))
)
# 计算缺失值比例
d1 %>%
summarise(across(everything(), ~ mean(is.na(.)))) %>%
pivot_longer(everything(), names_to = "variable", values_to = "missing_rate") %>%
arrange(desc(missing_rate))
# 按行统计缺失值
flights %>%
mutate(missing_count = rowSums(is.na(.))) %>%
# filter(missing_count>1) %>%
arrange(desc(missing_count))
# 步骤二：可视化缺失值
# 1.使用VIM包中的aggr函数
aggr(d1,
# col = c('navyblue','red'),
# prop=TRUE,
numbers = TRUE,
sortVars = TRUE,
labels = names(d1),
# cex.axis = .7,
# gap = 3,
ylab = c("Missing data","Pattern")
)
matrixplot(d1)
# 2.使用ggplot2包可视化
d1 %>%
gather(key = "variable", value = "value") %>%
ggplot(aes(x = variable, fill = is.na(value))) +
geom_bar() +
coord_flip()
# 3.使用DataExplorer包可视化
plot_missing(d1)
# 2.使用ggplot2包可视化
d1 %>%
gather(key = "variable", value = "value") %>%
ggplot(aes(x = variable, fill = is.na(value))) +
geom_bar() +
coord_flip()
# 步骤二：可视化缺失值
# 1.使用VIM包中的aggr函数
aggr(d1,
# col = c('navyblue','red'),
# prop=TRUE,
numbers = TRUE,
sortVars = TRUE,
labels = names(d1),
# cex.axis = .7,
# gap = 3,
ylab = c("Missing data","Pattern")
)
# 步骤三：筛选出缺失值的行
missing_rows <- d1 %>%
filter(if_any(everything(), is.na)) %>% # 筛选出所有列包含缺失值的行
print()
# 描述统计
glimpse(d1)
